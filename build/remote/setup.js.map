{
  "version": 3,
  "sources": ["../../src/remote/setup.ts"],
  "sourcesContent": ["/**\n * Setup script for the remote client.\n * This will be updated with some file contents by `build-remote-client-setup.js`\n * and saved in `admin/remote-client-setup.js`.\n*/\n/* eslint-disable no-console */\n\nimport * as fs from 'fs';\nimport * as os from 'os';\nimport * as path from 'path';\n\nconst SYSTEMD_SERVICE_NAME = 'iobroker-ds18b20-remote.service';\n\nconst files: Record<string, string> = {\n  FILE: 'DUMMY', // will be replaced during remote-client-setup creation\n};\n\nfor (const f in files) {\n  const content = Buffer.from(files[f], 'base64').toString('utf-8');\n  fs.writeFileSync(f, content, { encoding: 'utf-8' });\n}\n\nconst systemDContent = `[Unit]\nDescription=ioBroker.ds18b20 remote client\nDocumentation=https://github.com/crycode-de/ioBroker.ds18b20\nAfter=network.target\n\n[Service]\nType=simple\nUser=${os.userInfo().username}\nWorkingDirectory=${__dirname}\nExecStart=${process.execPath} ${path.join(__dirname, 'ds18b20-remote-client.js')}\nRestart=on-failure\n\n[Install]\nWantedBy=multi-user.target\n`;\n\nconst systemDFile = path.join(__dirname, SYSTEMD_SERVICE_NAME);\nfs.writeFileSync(systemDFile, systemDContent, { encoding: 'utf-8' });\n\nconst dotEnvContent = `# Settings for the ioBroker.ds18b20 remote client\n\n# Unique ID for this remote system\nSYSTEM_ID=my-remote\n\n# IP or hostname of the ioBroker host running the adapter\nADAPTER_HOST=\n\n# Port from the adapter config\nADAPTER_PORT=1820\n\n# Encryption key from the adapter config\nADAPTER_KEY=\n\n# Enable debug log output\n#DEBUG=1\n\n# System path of the 1-wire devices\n#W1_DEVICES_PATH=/sys/bus/w1/devices\n`;\n\nconst dotEnvFile = path.join(__dirname, '.env');\nif (!fs.existsSync(dotEnvFile)) {\n  fs.writeFileSync(dotEnvFile, dotEnvContent, { encoding: 'utf-8' });\n}\n\nconsole.log(`- ioBroker.ds18b20 remote client -\n\nBasic setup done.\n\nPlease adjust the settings in the .env file.\n\nTo manually start the client just run:\n  node ds18b20-remote-client.js\n\nTo setup the SystemD service, please run:\n  sudo cp ${SYSTEMD_SERVICE_NAME} /etc/systemd/system/${SYSTEMD_SERVICE_NAME}\n  sudo systemctl daemon-reload\n  sudo systemctl enable ${SYSTEMD_SERVICE_NAME}\n  sudo systemctl start ${SYSTEMD_SERVICE_NAME}\n`);\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAOA,SAAoB;AACpB,SAAoB;AACpB,WAAsB;AAEtB,MAAM,uBAAuB;AAE7B,MAAM,QAAgC;AAAA,EACpC,MAAM;AAAA;AACR;AAEA,WAAW,KAAK,OAAO;AACrB,QAAM,UAAU,OAAO,KAAK,MAAM,CAAC,GAAG,QAAQ,EAAE,SAAS,OAAO;AAChE,KAAG,cAAc,GAAG,SAAS,EAAE,UAAU,QAAQ,CAAC;AACpD;AAEA,MAAM,iBAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOhB,GAAG,SAAS,EAAE,QAAQ;AAAA,mBACV,SAAS;AAAA,YAChB,QAAQ,QAAQ,IAAI,KAAK,KAAK,WAAW,0BAA0B,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAOhF,MAAM,cAAc,KAAK,KAAK,WAAW,oBAAoB;AAC7D,GAAG,cAAc,aAAa,gBAAgB,EAAE,UAAU,QAAQ,CAAC;AAEnE,MAAM,gBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqBtB,MAAM,aAAa,KAAK,KAAK,WAAW,MAAM;AAC9C,IAAI,CAAC,GAAG,WAAW,UAAU,GAAG;AAC9B,KAAG,cAAc,YAAY,eAAe,EAAE,UAAU,QAAQ,CAAC;AACnE;AAEA,QAAQ,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAUA,oBAAoB,wBAAwB,oBAAoB;AAAA;AAAA,0BAElD,oBAAoB;AAAA,yBACrB,oBAAoB;AAAA,CAC5C;",
  "names": []
}
